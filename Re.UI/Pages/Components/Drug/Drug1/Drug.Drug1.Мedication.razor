@using Re.Core.Models
@using Re.UI.Data
@inject Re.Services.Services.DrugService reService

<MudPaper Style="padding: 20px; margin: 15px 0">
    <MudText style="margin-top: 15px; font-weight: bolder;">
        <MudGrid Justify="Justify.FlexStart" Style="align-items: flex-end;">

            <MudItem xs="2">
                <MudText style="margin-top: 15px; font-weight: bolder;">  @date.ToDateOnly().ToString() </MudText>
            </MudItem>

            <MudItem xs="2">
                <MudText style="margin-top: 15px; font-weight: bolder;"> @string.Format("{0}:{1}", time.Value.Hours.ToString("D2"),time.Value.Minutes.ToString("D2")) </MudText>
            </MudItem>

            <MudItem xs="6">
                <MudSelect  ValueChanged="PresetsOnChage"  T="string" Label="Готовый набор:" AnchorOrigin="Origin.BottomCenter">
                   @foreach (var item in Presets)
                        {
                            <MudSelectItem onchange="myFunction(item)" Value="@item" />
                        }
                </MudSelect>
            </MudItem>

           
        </MudGrid>

        <MudGrid Justify="Justify.Center" Style="align-items: center;">

            <MudItem xs="10">
                <MudSelect T="string" Label="Показание:" AnchorOrigin="Origin.BottomCenter" @bind-Value="medication.Purpose">
                    @foreach (var item in Purpose)
                        {
                            <MudSelectItem Value="@item" />
                        }
                </MudSelect>
            </MudItem>

             <MudItem xs="10">
                <MudSelect T="string" Label="Препарат:" AnchorOrigin="Origin.BottomCenter" @bind-Value="medication.Medication">
                   @foreach (var item in Medications)
                        {
                        <MudSelectItem Value="@item" />
                        
                    }
                </MudSelect>
            </MudItem>

             <MudItem xs="10">
                <MudSelect T="string" Label="Путь введения:" AnchorOrigin="Origin.BottomCenter" @bind-Value="medication.Injection">
                   @foreach (var item in Injection)
                        {
                            <MudSelectItem Value="@item" />
                        }
                </MudSelect>
            </MudItem>

        </MudGrid>

        <MudGrid Justify="Justify.Center" Style="align-items: flex-end;">
            @if ((medication.Medication != null) & (medication.Medication.Contains("Sol.")))
            {
            <MudItem xs="2">
                <MudNumericField Style="text-align: center; width: 75px" HideSpinButtons="true" @bind-Value="medication.Volume" Variant="Variant.Text" Min="0" />
            </MudItem>

            <MudItem xs="2">
                <MudText Typo="Typo.subtitle1">мл</MudText>
            </MudItem>

            <MudItem xs="2">
                <MudNumericField Style="text-align: center; width: 75px" HideSpinButtons="true" @bind-Value="medication.Аmpoule" Variant="Variant.Text" Min="0" />
            </MudItem>

            <MudItem xs="4">
                <MudText Typo="Typo.subtitle1">Количество ампул</MudText>
            </MudItem>
            }

            @if ((medication.Medication != null) & (medication.Medication.Contains("Tab.")))
            {
            

            <MudItem xs="2">
                <MudNumericField Style="text-align: center; width: 75px" HideSpinButtons="true" @bind-Value="medication.Tablet" Variant="Variant.Text" Min="0" />
            </MudItem>

            <MudItem xs="4">
                <MudText Typo="Typo.subtitle1">Количество таблеток</MudText>
            </MudItem>
            }

            @if ((medication.Medication != null) & (medication.Medication.Contains("TTC")))
            {
            
            <MudItem xs="2">
                <MudNumericField Style="text-align: center; width: 75px" HideSpinButtons="true" @bind-Value="medication.TTC" Variant="Variant.Text" Min="0" />
            </MudItem>

            <MudItem xs="4">
                <MudText Typo="Typo.subtitle1">Количество ТТС</MudText>
            </MudItem>
            }



            <MudItem xs="10">
                <MudSelect T="string" Label="Врач:" AnchorOrigin="Origin.BottomCenter" @bind-Value="medication.Doctor">
                   @foreach (var item in Doctor)
                        {
                            <MudSelectItem Value="@item" />
                        }
                </MudSelect>
            </MudItem>
            </MudGrid>
        <MudGrid Justify="Justify.FlexEnd">
             <MudItem>
                 <MudButton OnClick="Submit" Variant="Variant.Outlined" Color="Color.Primary">Отправить</MudButton>
            </MudItem>

        </MudGrid>

    </MudText>
</MudPaper>


@code {
    DateTime? date = DateTime.Now;
    TimeSpan? time = DateTime.Now.TimeOfDay.Add(TimeSpan.FromMinutes(5));

    PrescribedMedication medication = new PrescribedMedication();

     async Task Submit()
    {
        await reService.SaveMedicationAsync(medication); 
    }
    private string selectedStage {get; set;}

    string[] Presets = new string[]
            {   "Стандартный промедол",
                "Стандартный морфин",
                "Стандартный реланиум",
                "Стандартный сибазон",
                "Стандартный трамадол",
                "Таргин 5 + 10",
                "Фендивия 12,5"};


    private void PresetsOnChage(string selected)
    {
        selectedStage = selected;

        switch(selectedStage)
        {case "Стандартный промедол":
                medication.Purpose = Purpose[0];
                medication.Medication = Medications[7];
                medication.Injection = Injection[2];
                medication.Volume = 1;
                medication.Аmpoule = 1;
                break;
            case "Стандартный морфин":
                medication.Purpose = Purpose[0];
                medication.Medication = Medications[8];
                medication.Injection = Injection[2];
                medication.Volume = 1;
                medication.Аmpoule = 1;
                break;
            case "Стандартный реланиум":
                medication.Purpose = Purpose[2];
                medication.Medication = Medications[9];
                medication.Injection = Injection[2];
                medication.Volume = 2;
                medication.Аmpoule = 1;
                break;
            case "Стандартный сибазон":
                medication.Purpose = Purpose[2];
                medication.Medication = Medications[10];
                medication.Injection = Injection[2];
                medication.Volume = 2;
                medication.Аmpoule = 1;
                break;
            case "Стандартный трамадол":
                medication.Purpose = Purpose[0];
                medication.Medication = Medications[11];
                medication.Injection = Injection[2];
                medication.Volume = 1;
                medication.Аmpoule = 1;
                break;
            case "Таргин 5 + 10":
                medication.Purpose = Purpose[0];
                medication.Medication = Medications[1];
                medication.Injection = Injection[0];
                medication.Tablet = 1;
                break;
         case "Фендивия 12,5":
                medication.Purpose = Purpose[0];
                medication.Medication = Medications[4];
                medication.Injection = Injection[1];
                medication.TTC = 1;
                break;
       
         }

       
        
    }

    string[] Purpose = new string[]
        {   "купирование болевого синдрома",
            "купирование отека легких",
            "медикаментозной седации",
            "cинхронизации с аппаратом ИВЛ",};

    string[] Medications = new string[]
        {   
            "Tab. Targin 2.5 mg + 5 mg",
            "Tab. Targin 5 mg + 10 mg",
            "Tab. Targin 10 mg + 20 mg",
            "Tab. Targin 20 mg + 40 mg",
            "TTC Фендивия Fentanyl 12,5 mcg/hour",
            "ТTC Фендивия Fentanyl 25 mcg/hour",
            "TTC Фендивия Fentanyl 50 mcg/hour",
            "Sol. Promedoli 20 mg/ml",
            "Sol. Morphini 10 mg/ml",
            "Sol. Relanii 5mg/ml",
            "Sol. Sibazoni 5 mg/ml}",
            "Sol. Tramadoli 50mg/ml",
            "Sol. Ketamini 5%",
            "Sol. Sibazoni 5mg/ml",
            "Sol. Phentanyli 50 mcg/ml",
            "Sol. Natrii Oxybati 20%"
            };

            

    string[] Injection = new string[]
        {   "per os",
            "трансдермально",
            "в/м",
            "в/в",
            "в/в, м/стр",
            "в/в капельно в течении 24 часов" };

         string[] Doctor = new string[]
        {   ""};
}
