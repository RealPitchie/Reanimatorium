@using Re.Core.Models;
@using Re.UI.Data
@using System.Diagnostics;
@inject IDialogService DialogService
@inject Re.Services.Services.ReceptEpicrisisService reService

<MudGrid>
    <MudItem xs="9">
        <MudText Align="Align.Center">Отделение анестезиологии-реанимации</MudText>
        <MudGrid Justify="Justify.Center">
            <MudItem>
                <MudDatePicker style="width: 150px;" Label="Дата" @bind-Date="date" />
            </MudItem>
            <MudItem>
                <MudTimePicker style="width: 150px;" Label="Время" @bind-Time="time" />
            </MudItem>
        </MudGrid>
        <MudPaper Style="padding: 20px; margin: 15px 0">
            <MudText Align="Align.Center" Typo="Typo.h5">@Name</MudText>
            <MudSelect @bind-Value="re.DeliveredFrom" T="string" Label="Пациент доставлен в реанимационное отделение из" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in DeliveredFrom)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudSelect @bind-Value="re.AVLDueTransportation" T="string" Label="ИВЛ при транспортировке" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in AVLDueTransportation)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudSelect @bind-Value="re.Complaints" T="string" Label="Жалобы:" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in Complaints)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudGrid Justify="Justify.FlexStart" Style="align-items: flex-end;">
                <MudItem xs="7">
                    <MudTextField T="string" Label="Жалобы на" Variant="Variant.Text" Text="@re.ComplaintText" />
                </MudItem>
                <MudItem Style="padding: 12px 0;" xs="2">
                    <MudSwitch Class="d-flex justify-end" @bind-Checked="@IsVashOn" Color="Color.Primary"
                               Label="ВАШ - "></MudSwitch>
                </MudItem>
                @if (IsVashOn)
                {
                    <MudItem xs="3">
                        <MudSelect @bind-Value="re.VAS" T="string">
                            @foreach (var item in VAS)
                            {
                                <MudSelectItem Value="@item" />
                            }
                        </MudSelect>
                    </MudItem>
                }
            </MudGrid>
            <MudText Style="font-weight: bold; padding-top: 10px;">Объективно</MudText>
            <MudSelect @bind-Value="re.Condition" T="string" Label="Состояние" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in Condition)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudGrid>
                <MudItem xs="6">
                    <MudSelect @bind-Value="re.Conscience" T="string" Label="Сознание:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in Conscience)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6">
                    <MudSelect @bind-Value="re.Ramsey" T="string" Label="Ramsey:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in Ramsey)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudSelect @bind-Value="re.MuscleTone" T="string" Label="Мышечный тонус" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in MuscleTone)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudGrid>
                <MudItem xs="2" Class="d-flex flex-column justify-end"><MudText>Кожные покровы</MudText></MudItem>
                <MudItem xs="4">
                    <MudSelect @bind-Value="re.SkinCovers[0]" T="string" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in SkinCovers[0])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="2">
                    <MudSelect @bind-Value="re.SkinCovers[1]" T="string" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in SkinCovers[1])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="4">
                    <MudSelect @bind-Value="re.SkinCovers[2]" T="string" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in SkinCovers[2])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>

            <MudGrid>
                <MudItem Style="padding-top: 0;" xs="6">
                    <MudSelect @bind-Value="re.Cyanosis" T="string" Label="Цианоз:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in Cyanosis)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0;" xs="6">
                    <MudSelect @bind-Value="re.Marbling" T="string" Label="Мраморность:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in Marbling)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudSelect @bind-Value="re.PeripheralEdema" T="string" Label="Периферические отеки:" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in PeripheralEdema)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudGrid>
                <MudItem xs="2" Class="d-flex flex-column justify-end"><MudText>В/в катетер -</MudText></MudItem>
                <MudItem xs="5">
                    <MudSelect @bind-Value="re.VeinsToBeCatheterized[0]" T="string" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in VeinsToBeCatheterized[0])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="5">
                    <MudSelect @bind-Value="re.VeinsToBeCatheterized[1]" T="string" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in VeinsToBeCatheterized[1])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem Style="padding-top: 0;" xs="7">
                    <MudSelect @bind-Value="re.InflammationInCatheter" T="string" Label="Признаки воспаления в области катетера:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in InflammationInCatheter)
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0;" xs="5">
                    <MudSelect @bind-Value="re.SpontaneousBreathing" T="string" Label="Спонтанное дыхание:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in SpontaneousBreathing)
                        {
                            <MudSelectItem Value="@item"/>
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem Style="padding-top: 0;" xs="6">
                    <MudSelect @bind-Value="re.BreathingThrough" T="string" Label="Дыхание через:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in BreathingThrough)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0;" xs="6">
                    <MudSelect @bind-Value="re.BreathingDisorder" T="string" Label="Нарушение дыхания:" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in BreathingDisorder)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0;" xs="12">
                    <MudSelect @bind-Value="re.Auscultatory" T="string" Label="Аускультативно">
                        @foreach(var item in Auscultatory)
                        {
                            <MudSelectItem Value="@item"/>
                        }
                    </MudSelect>
                </MudItem>
                
            </MudGrid>
            <MudGrid>
                <MudItem Style="padding-top: 0" xs="3" Class="d-flex flex-column justify-end">
                    <MudText>Ослабление дыхания</MudText>
                </MudItem>
                <MudItem Style="padding-top: 0" xs="2">
                    <MudSelect @bind-Value="re.BreathingRate[0]" T="string">
                        @foreach (var item in BreathingRate[0])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0" xs="7">
                    <MudSelect @bind-Value="re.BreathingRate[1]" T="string">
                        @foreach (var item in BreathingRate[1])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem Style="padding-top: 0" xs="2" Class="d-flex flex-column justify-end">
                    <MudText>Хрипы</MudText>
                </MudItem>
                <MudItem Style="padding-top: 0" xs="2">
                    <MudSelect @bind-Value="re.Wheezes[0]" T="string">
                        @foreach (var item in Wheezes[0])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0" xs="4">
                    <MudSelect @bind-Value="re.Wheezes[1]" T="string">
                        @foreach (var item in Wheezes[1])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem Style="padding-top: 0" xs="4">
                    <MudSelect @bind-Value="re.Wheezes[2]" T="string">
                        @foreach (var item in Wheezes[2])
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            @if (!IsIVL)
            {
                <MudGrid>
                    <MudItem Class="d-flex flex-column justify-end" xs="1">
                        <MudText>ЧДД</MudText>
                    </MudItem>
                    <MudItem xs="2">
                        <MudNumericField Style="margin-top: 0" HideSpinButtons="true" @bind-Value="re.RespiratoryRate" Variant="Variant.Text" Min="0"></MudNumericField>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="4">
                        <MudText>в 1 минуту</MudText>
                    </MudItem>
                </MudGrid>
                <MudGrid>
                    <MudItem Style="padding-top: 0" xs="7">
                        <MudSelect @bind-Value="re.OxygenInsufflation" T="string" Label="Инсуфляция кислорода через">
                            @foreach (var item in OxygenInsufflation)
                            {
                                <MudSelectItem Value="@item" />
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem Style="padding-top: 0" Class="d-flex flex-column justify-end"><MudText>V = </MudText></MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="1">
                        <MudNumericField Class="d-flex flex-column justify-end" Style="margin-top: 0; padding-top: 0" HideSpinButtons="true" @bind-Value="re.Volume" Variant="Variant.Text" Min="0"></MudNumericField>
                    </MudItem>
                    <MudItem Style="padding-top: 0" Class="d-flex flex-column justify-end" xs="2"><MudText>л/мин</MudText></MudItem>
                </MudGrid>
            }
            @if (IsIVL)
            {
                <MudSelect @bind-Value="re.RespiratorySupport" T="string" Label="Респираторная поддержка">
                    @foreach (var item in RespiratorySupport)
                    {
                        <MudSelectItem Value="@item"/>
                    }
                </MudSelect>
                <MudGrid>
                    <MudItem xs="4">
                        <MudSelect @bind-Value="re.Device" T="string" Label="Аппаратом">
                            @foreach (var item in Device)
                            {
                                <MudSelectItem Value="@item" />
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="3">
                        <MudSelect @bind-Value="re.Mode" T="string" Label="Режим">
                            @foreach (var item in Mode)
                            {
                                <MudSelectItem Value="@item" />
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="1">
                        <MudText>ДО - </MudText>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="1">
                        <MudNumericField Class="d-flex flex-column justify-end" Style="margin-top: 0; padding-top: 0" HideSpinButtons="true" @bind-Value="re.Till" Variant="Variant.Text" Min="0"></MudNumericField>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="3">
                        <MudText>мл.</MudText>
                    </MudItem>
                    <MudItem xs="2">
                        <MudNumericField Class="d-flex flex-column justify-end" 
                        Style="padding-top: 0" HideSpinButtons="true" Label="ЧД апп." 
                        @bind-Value="re.BR" Variant="Variant.Text" Min="0"/>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="2">
                        <MudText>в 1 мин.</MudText>
                    </MudItem>
                    <MudItem xs="2">
                        <MudNumericField Class="d-flex flex-column justify-end" Disabled="true"
                                         Style="padding-top: 0" HideSpinButtons="true"
                                         Label="MOB" Variant="Variant.Text" Value="6" />
                    </MudItem>
                    <MudItem xs="2">
                        <MudNumericField Class="d-flex flex-column justify-end"
                                         Style="padding-top: 0" HideSpinButtons="true" Label="Pinsp" 
                                          @bind-Value="re.Pinsp" Variant="Variant.Text" Min="0"/>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="3">
                        <MudText>см. водн. ст.</MudText>
                    </MudItem>
                    <MudItem xs="2">
                        <MudNumericField Class="d-flex flex-column justify-end"
                                         Style="padding-top: 0" HideSpinButtons="true" Label="Psupp"
                        @bind-Value="re.Psupp" Variant="Variant.Text" Min="0" />
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="2">
                        <MudText>см. водн. ст.</MudText>
                    </MudItem>
                    <MudItem xs="2">
                        <MudNumericField Class="d-flex flex-column justify-end"
                                         Style="padding-top: 0" HideSpinButtons="true" Label="PEEP"
                        @bind-Value="re.PEEP" Variant="Variant.Text" Min="0"/>
                    </MudItem>
                    <MudItem xs="1">
                        <MudNumericField Class="d-flex flex-column justify-end"
                                         Style="padding-top: 0" HideSpinButtons="true" Label="FiO2"
                        @bind-Value="re.FiO2" Variant="Variant.Text" Min="0"/>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="1">
                        <MudText>%</MudText>
                    </MudItem>
                </MudGrid>
                <MudGrid>
                    <MudItem xs="6">
                        <MudSelect @bind-Value="re.Inotropes" T="string" Label="Инотропы/вазопрессоры">
                            @foreach (var item in Inotropes)
                            {
                                <MudSelectItem Value="@item" />
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="2">
                        <MudNumericField Class="d-flex flex-column justify-end" Style="margin-top: 0; padding-top: 0" HideSpinButtons="true" @bind-Value="re.InotropesValue" Variant="Variant.Text" Min="0"/>
                    </MudItem>
                    <MudItem Class="d-flex flex-column justify-end" xs="4">
                        <MudSelect @bind-Value="re.InotropesUnits" T="string">
                            @foreach (var item in InotropesUnits)
                            {
                                <MudSelectItem Value="@item" />
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem Style="padding-top: 0" xs="12">
                        <MudTextField @bind-Value="re.InotropesDescription" Label="Инотропы/вазопрессоры(описание)"></MudTextField>
                    </MudItem>
                </MudGrid>
            }
            <MudSelect Label="Гемодинамика" @bind-Value="re.Hemodynamics" T="string">
                @foreach (var item in Hemodynamics)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
            <MudGrid>
                <MudItem Class="d-flex flex-column justify-end">
                    <MudText Typo="Typo.subtitle1">АД</MudText>
                </MudItem>
                <MudItem xs="1">
                    <MudNumericField HideSpinButtons="true" @bind-Value="re.ArtherialPressure[0]" Variant="Variant.Text" Min="0" />
                </MudItem>

                <MudItem Class="d-flex flex-column justify-end">
                    <MudText>/</MudText>
                </MudItem>

                <MudItem xs="1">
                    <MudNumericField HideSpinButtons="true" @bind-Value="re.ArtherialPressure[1]" Variant="Variant.Text" Min="0" />
                </MudItem>
                <MudItem Class="d-flex flex-column justify-end">
                    <MudText Typo="Typo.subtitle1">мм рт. ст.</MudText>
                </MudItem>

                <MudItem>
                    <MudNumericField Style="text-align: center; width: 75px" Label="Пульс" HideSpinButtons="true" @bind-Value="re.Pulse" Variant="Variant.Text" Min="0" />
                </MudItem>
                <MudItem Class="d-flex flex-column justify-end">
                    <MudText Typo="Typo.subtitle1">уд./мин.</MudText>
                </MudItem>

                <MudItem>
                    <MudSelect T="string" Label="Ритмичность:" AnchorOrigin="Origin.BottomCenter" @bind-Value="re.PulseRhythm">
                        @foreach (var item in PulseRhythm)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem lg="2">
                    <MudNumericField Label="ЧСС" HideSpinButtons="true" @bind-Value="re.HeartRate" Variant="Variant.Text" Min="0" />
                </MudItem>
                <MudItem Class="d-flex flex-column justify-end">
                    <MudText Typo="Typo.subtitle1">в 1 мин.</MudText>
                </MudItem>
                <MudItem xs="1">
                    <MudNumericField Label="SpO₂" HideSpinButtons="true" @bind-Value="re.SpO2" Variant="Variant.Text" Min="0" Max="100" />
                </MudItem>
                <MudItem Class="d-flex flex-column justify-end">
                    <MudText Typo="Typo.subtitle1">%</MudText>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="3">
                    <MudSelect Label="Живот:" AnchorOrigin="Origin.BottomCenter" @bind-Value="re.Abdomen">
                        @foreach (var item in Abdomen)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                    
                </MudItem>
                <MudItem xs="9">
                    <MudTextField @bind-Value="re.AbdomenText" Label="Живот" />
                </MudItem>
                <MudItem xs="3">
                    <MudSelect Label="Болезненности" @bind-Value="re.Pain">
                        @foreach (var item in Pain)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                    
                </MudItem>
                <MudItem xs="9">
                    <MudTextField Label="Болезненности" @bind-Value="re.PainText" />
                </MudItem>
                <MudItem xs="3">
                    <MudSelect Label="Живот вздут" @bind-Value="re.Distension">
                        @foreach (var item in Distension)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                    
                </MudItem>
                <MudItem xs="9">
                    <MudTextField Label="Живот вздут" @bind-Value="re.DistensionText" />
                </MudItem>
                 <MudItem xs="12">
                    <MudSelect Label="Перистальтика" @bind-Value="re.Peristalsis">
                        @foreach (var item in Peristalsis)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6">
                    <MudSelect Label="Язык" @bind-Value="re.Tongue[0]">
                    @foreach (var item in Tongue[0])
                    {
                        <MudSelectItem Value="@item" />
                    }
                </MudSelect>
                </MudItem>
                <MudItem xs="6">
                    <MudSelect Label="Язык" @bind-Value="re.Tongue[1]">
                    @foreach (var item in Tongue[1])
                    {
                        <MudSelectItem Value="@item" />
                    }
                </MudSelect>
                </MudItem>
                <MudItem xs="2">
                    <MudNumericField HideSpinButtons="true" Label="Диурез" @bind-Value="re.Diuresis" Min="0" />
                    
                </MudItem>
                <MudItem Class="d-flex flex-column justify-end" xs="1">
                    <MudText>мл.</MudText>
                </MudItem>
                <MudItem xs="5">
                    <MudSelect Label="Моча" @bind-Value="re.Urine">
                        @foreach (var item in PulseRhythm)
                        {
                            <MudSelectItem Value="@item" />
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem Class="d-flex flex-column justify-end" Style="padding: 12px;" xs="3">
                    <MudSwitch @bind-Checked="IsDrainage" Label="По дренажам" Color="Color.Primary" />
                </MudItem>
                @if (IsDrainage)
                {
                    <MudItem xs="9">
                        <MudTextField @bind-Value="re.Drainage" Text="следы."/>
                    </MudItem>
                }
            </MudGrid>
            <MudTextField @bind-Value="re.LaboratoryData" Label="Лабораторные данные"/>
            <MudGrid>
                <MudItem Class="d-flex flex-column justify-end" Style="padding: 12px;" xs="3">
                    <MudSwitch @bind-Checked="IsAddition" Label="Дополнительно" Color="Color.Primary" />
                </MudItem>
                @if (IsAddition)
                {
                    <MudItem xs="9">
                        <MudTextField @bind-Value="re.Addition"/>
                    </MudItem>
                }
            </MudGrid>
            <MudStack Spacing="0" Row="true">
                <MudItem Class="d-flex flex-column justify-center" xs="3">
                   <MudText>Тяжесть состояния обусловлена: </MudText>
                </MudItem>
                <MudItem Style="margin-right: 30px" xs="9">
                    <MudInput Style="width: 100%" @bind-Value="re.SeverityOfCondition" Lines="3">@string.Join(',', re.SeverityOfCondition)</MudInput>
                </MudItem>
                <MudButton Style="margin-right: -250px; width: 25%; padding: 0; height: 3rem;" StartIcon="@Icons.Material.Filled.FormatListNumbered"
                           OnClick="OpenConditionDialog" Color="Color.Primary" Variant="Variant.Outlined">
                    Тяжесть состояния
                </MudButton>
            </MudStack>
            <MudStack Spacing="0" Row="true">
                <MudItem Class="d-flex flex-column justify-center" xs="3">
                     <MudText>Планируется: </MudText>
                </MudItem>
                <MudItem Style="margin-right: 30px" xs="9">
                     <MudInput Style="width: 100%;" @bind-Value="re.TreatmentPlan" Lines="3">@string.Join(',', re.TreatmentPlan)</MudInput>
                </MudItem>
                <MudButton Style="margin-right: -250px; margin-left: 40; width: 25%; padding: 0; height: 3rem;" StartIcon="@Icons.Material.Filled.FormatListNumbered"
                           OnClick="OpenPlanDialog" Color="Color.Primary" Variant="Variant.Outlined">
                    План лечения
                </MudButton>
            </MudStack>
            <MudStack Row="true">
                <MudItem xs="3"></MudItem>
            <MudItem xs="6">
                    <MudSelect Label="Врач:" @bind-Value="re.Doctor" ToStringFunc="@converter">
                        @foreach (var item in doctors)
                    {
                        <MudSelectItem Value="@item" />
                    }
                </MudSelect>
            </MudItem>
                <MudItem Class="d-flex flex-column justify-center"><MudText>/</MudText></MudItem>
            <MudItem xs="3">
                <MudField Disabled="true" HelperText="Подпись"></MudField>
            </MudItem>
            </MudStack>
            <MudButton OnClick="Submit" FullWidth="true" Variant="Variant.Filled" Color="Color.Primary">Сохранить</MudButton>
        </MudPaper>
        
    </MudItem>
    <MudItem xs="3">
        <MudGrid Style="position: sticky; top: 100px; right: 50px">
            <MudItem >
                <MudBadge Color="Color.Error" Origin="Origin.TopCenter" Overlap="true" Content="@robodoc">
                    <MudPaper Class="d-flex flex-column justify-center" Style="background-color: #D9D9D9; border: 1px solid #C00000;"
                              Height="140px" Width="180px">
                        <MudButtonGroup Style="margin: 1rem;" Variant="Variant.Outlined" Size="Size.Large" VerticalAlign="true">
                            <MudButton Style="justify-content: space-between" OnClick="HandleWithoutIVL">
                                <MudImage Width="20" Src="../img/robot.png" />
                                Без ИВЛ
                            </MudButton>
                            <MudButton Style="justify-content: space-between" OnClick="HandleWithIVL">
                                <MudImage Width="20" Src="../img/robot.png" />
                                С ИВЛ
                            </MudButton>
                        </MudButtonGroup>
                    </MudPaper>
                </MudBadge>
            </MudItem>
        </MudGrid>
        
        
    </MudItem>
</MudGrid>

<MudDialog @bind-IsVisible="visibleCondition" Options="dialogOptionsCondition">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Class="mr-3" /> Тяжесть состояния обусловлена:
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="width: 500px; max-height: 500px; overflow-y: scroll">
            <MudSelect AdornmentColor="Color.Success" FullWidth="true" MultiSelection="true" @bind-Value="re.SeverityOfCondition" @bind-SelectedValues="listCondition">
                @foreach (var item in conditionList)
                {
                    <MudSelectItem Value="@item"></MudSelectItem>
                }
            </MudSelect>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="ConditionOk">ОК</MudButton>
        <MudButton OnClick="ClearConditionList">Очистить список</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="visiblePlan" Options="dialogOptionsPlan">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Class="mr-3" /> Планируется:
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="width: 500px; max-height: 500px; overflow-y: scroll">
            <MudSelect AdornmentColor="Color.Success" FullWidth="true" MultiSelection="true" @bind-Value="re.TreatmentPlan" @bind-SelectedValues="listTreatmentPlan">
                @foreach (var item in planList)
                {
                    <MudSelectItem Value="@item"></MudSelectItem>
                }
            </MudSelect>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="PlanOk">ОК</MudButton>
        <MudButton OnClick="ClearTreatmentPlan">Очистить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    string[] conditionList = new string[]
        {
            "объемом оперативного вмешательства",
            "течением основного заболевания",
            "сопутствующей патологией",
            "остаточной седацией",
            "медикаментозной миоплегией",
            "церебральной недостаточностью",
            "сердечной недостаточностью",
            "дыхательной недостаточностью",
            "ХПН",
            "ОПН",
            "ОпечН",
            "ХПечН",
            "СПОН",
            "ССВО",
            "ДВС-синдромом",
            "ОРДС",
            "нарушением ВЭБ",
            "нарушением КЩС",
            "декомпенсацией ХСН",
            "левожелудочковой недостаточностью",
            "течением постреанимационной болезни",
            "анемией тяжелой степени",
            "анемией средней степени тяжести",
            "алиментарной недостаточностью",
            "синдромом эндогенной интоксикации"
        };
    string[] planList = {
    "осуществление наблюдения за состоянием пациента после окончания анестезии до восстановления и стабилизации жизненно важных функций",
    "динамическое наблюдение",
    "контроль лабораторных показателей",
    "антибактериальная терапия",
    "инфузионная терапия",
    "анальгезия",
    "респираторная поддержка",
    "профилактика ТЭЛА",
    "коррекция ВЭБ и КОС",
    "детоксикация",
    "заместительная терапия",
    "гемотрансфузия",
    "парентеральное питание",
    "энтеральное питание",
    "нейровегетативная стабилизация",
    "инотропная и вазопрессорная поддержка",
    "вазоактивная терапия",
    "кардиотропная терапия",
    "гастропротекция"
};
    string Name = "Приемный статус";
    string[] DeliveredFrom = new string[]
    {
        "операционной.", "премного отделения.", "поликлиники.",
        "1 отделения.", "2 отделения.", "3 отделения.",
        "4 отделения.", "5 отделения.", "6 отделения.",
        "7 отделения.", "8 отделения.", "9 отделения.",
        "10 отделения.", "11 отделения.", "12 отделения.",
        "13 отделения.", "14 отделения.", "15 отделения.",
        "16 отделения.", "17 отделения.", "18 отделения.",
        "19 отделения.", "20 отделения.", "бригадой СМП.",    
    };
    string[] AVLDueTransportation = new string[]
    { "нет.", "мешком AMBU.", "Dräger Oxylog.", "транспортным аппаратом ИВЛ." };
    string[] Complaints = new string[]
    {
        "Жалоб нет.", "Жалобы не предъявляет из-за тяжести состояния.",
        "Не предъявляет жалоб из-за седации.", "Жалобы прежние.",
        "Предъявляет жалобы на", "Жалобы на боли в области операции."
    };
    string[] VAS = new string[]
    {
        "1 б.", "2 б.", "3 б.", "4 б.", "5 б.",
        "6 б.", "7 б.", "8 б.", "9 б.", "10 б.",
    };
    string[] Condition = new string[]
    {
        "удовлетворительное.", "средней тяжести.",
        "тяжелое.", "крайне тяжелое.",
        "терминальное.", "клинической смерти."
    };
    string[] Conscience = new string[]
    {
        "ясное.","оглушение.","глубокое оглушение.","сопор.",
        "кома I.","кома II.","кома III.","медикаментозная седация."
    };
    string[] Ramsey = new string[]
    {
        "-5 баллов по шкале RASS.", "-4 балла по шкале RASS.",
        "-3 балла по шкале RASS.", "-2 балла по шкале RASS.",
        "-1 балл по шкале RASS.", "0 баллов по шкале RASS.",
        "1 балл по шкале RASS.", "2 балла по шкале RASS.",
        "3 балла по шкале RASS.", "4 балла по шкале RASS.",
        "5 баллов по шкале RASS."
    };
    string[] MuscleTone = new string[]
    { "не нарушен.", "снижен.", "медикаментозно угнетен."};
    List<string[]> SkinCovers = new List<string[]>()
    {
        new string[] {"сухие,", "влажные,", "естественной влажности,"},
        new string[] {"теплые,", "холодные,"},
        new string[] {"естественной окраски.", "бледные.", "бледно-розовые."},
    };

    string[] Cyanosis = new string[]
    {
        "нет.", "губ.", "лица.", "шеи.",
        "верхней половины грудной клетки.", "конечностей.", "диффузный."
    };
    string[] Marbling = new string[]
    { "нет.", "конечностей.", "грудной клетки.","живота." };
    string[] PeripheralEdema = new string[]
    {
        "нет.", "нижних конечностей.", "лица.",
        "боковых поверхностей туловища.", "анасакра."
    };

    List<string[]> VeinsToBeCatheterized = new List<string[]>()
    {
        new string[] { "периферическая вена.", "центральная вена.",
                "центральный венозный порт."},
        new string[] {
            "v.subclavia dext.","v.subclavia sin.","v.jugularis int. dext.",
            "v.jugularis in. sin.","v.femoralis dext.","v.femoralis sin."},
    };

    string[] InflammationInCatheter = new string[] { "нет.", "есть." };
    string[] SpontaneousBreathing = new string[] { "неэффективно.","эффективно." };
    string[] BreathingThrough = new string[]
    {
        "естественные пути.", "эндотрахеальную трубку.",
        "ларингеальную маску.", "трахеостомическую канюлю.", "воздуховод.",
    };
    string[] BreathingDisorder = new string[]
    { "нет.", "апноэ.", "трахипноэ.", "брадипноэ.", "периодизация." };
    string[] Auscultatory = new string[] 
    { "дыхание жесткое.","дыхание везикулярное.", "дыхание пуэрильное." };
    List<string[]> BreathingRate = new List<string[]>()
    {
        new string[] { "нет.", "есть,"},
        new string[] {"с двух сторон.", "справа.", "слева"},
    };
    List<string[]> Wheezes = new List<string[]>()
    {
        new string[] { "нет.", "есть,"},
        new string[] {"с двух сторон.", "справа.", "слева"},
        new string[] {"нет.", "сухие", "влажные", "крепитирующие", "проводные"},
    };
    string[] RespiratorySupport = new string[]{"не проводится.","начата","продолжена"};
    string[] OxygenInsufflation = new string[] 
    { 
        "носовые канюли.",
        "HFOT аппаратом Airvo 2",
        "лицевую маску",
        "CPAP-клапан",
        "искусственный но" 
    };
    string[] Device = new string[] { "NPB 740,", "NPB 760,", "NPB 840,", "Servo-S", "PO-6", "мешком AMBU," };
    string[] Mode = new string[] { "SPONT:","CPAP:","VCV:","PCV:","SIMV-VC:","SIMV-PC:","BiLevel:","A/C:","ASV:" };
    string[] Inotropes = new string[] { "адреналин -", "норадреналин -", "добутамин -", "дофамин -", "мезатон -" };
    string[] InotropesUnits = new string[] { "мкг/кг/мин", "мг/мин", "мл/час", "кап/мин" };
    string[] Hemodynamics = new string[] { "устойчивая", "неустойчивая" };
    string[] PulseRhythm = new string[]
        {  "ритмичный.",
           "аритмичный",
           "ФП.",
           "желудочковые экстрасистолы.",
           "предсердные экстрасистолы."};
    string[] Abdomen = new string[] { "мягкий", "напряженный" };
    string[] Pain = new string[] { "нет", "есть" };
    string[] Distension = new string[] { "резко", "умеренно", "незначительно" };
    string[] Peristalsis = new string[] 
    { 
        "активная.", "усилена.", "ослаблена.", "единичная.", "не выслушивается." 
    };
    List<string[]> Tongue = new List<string[]>() {
        new string[] { "влажный,", "сухой,"},
        new string[] {"чистый.", "обложен налетом."},
    };
    string[] Urine = new string[] { "светлая.", "темная.", "мутная.", "с примесью крови." };
    string[] doctorNames = new string[]
            {   "Розенгард С.А.",
            "Глущенко В.А.",
            "Алиева А.Э.",
            "Борзых И.С.",
            "Веденин Я.О.",
            "Горохов Л.В.",
            "Груздов М. С.",
            "Гурин М.Н.",
            "Зубайдов М.М.",
            "Ишкараев В.Э.",
            "Караваев А.В.",
            "Кононец Ф.А.",
            "Кремзель Е.Г.",
            "Митрохина М.В.",
            "Нюхлов Е.С.",
            "Пазюк К.И.",
            "Пастухова А.А.",
            "Попель И.В.",
            "Раевская О. А.",
            "Сапронова Т.Н.",
            "Семенов А.Н.",
            "Склярова В.О.",
            "Хестанова Н.З.",
            "Шабут А.М."};

    public ReceptionEpicrisis re = new();
    DateTime? date;
    TimeSpan? time;
    string robodoc = "ROBODOC";
    bool IsVashOn = false;
    bool IsIVL = false;
    bool IsDrainage = false;
    bool IsAddition = false;
    List<Doctor> doctors = new();
    Func<Doctor, string> converter = d =>
    {
        if (d != null) return d.Name;
        else return " ";
    };
    void DoctorAdd()
    {
        @for (int i = 0; i < doctorNames.Length; i++)
        {
            doctors.Add(new Doctor { Name = doctorNames[i], Id = Guid.NewGuid().ToString(), Position = i.ToString() });
        }
    }

    protected override void OnInitialized()
    {
        date = DateTime.Now;
        time = DateTime.Now.TimeOfDay;
        DoctorAdd();
    }

    void HandleWithoutIVL()
    {
        re.DeliveredFrom = DeliveredFrom[0];
        re.AVLDueTransportation = AVLDueTransportation[0];
        re.Complaints = Complaints[0];
        re.ComplaintText = "SOFA-0.";
        re.Condition = Condition[2];
        re.Conscience = Conscience[7];
        re.Ramsey = Ramsey[7];
        re.MuscleTone = MuscleTone[0];
        re.SkinCovers[0] = SkinCovers[0][0]?.ToString();
        re.SkinCovers[1] = SkinCovers[1][0]?.ToString();
        re.SkinCovers[2] = SkinCovers[2][0]?.ToString();
        re.Cyanosis = Cyanosis[0];
        re.Marbling = Marbling[0];
        re.PeripheralEdema = PeripheralEdema[0];
        re.VeinsToBeCatheterized[0] = VeinsToBeCatheterized[0][0]?.ToString();
        re.InflammationInCatheter = InflammationInCatheter[0];
        re.SpontaneousBreathing = SpontaneousBreathing[1];
        re.BreathingThrough = BreathingThrough[0];
        re.BreathingDisorder = BreathingDisorder[0];
        re.Auscultatory = Auscultatory[0];
        re.BreathingRate[0] = BreathingRate[0][0]?.ToString();
        re.Wheezes[0] = Wheezes[0][0]?.ToString();
        #region WithouAvl Block
        if(re.RespiratoryRate == 0) re.RespiratoryRate = 16;
        if (re.OxygenInsufflation == null) re.OxygenInsufflation = OxygenInsufflation[0];
        if (re.Volume == 0) re.Volume = 5;
        #endregion
        re.Hemodynamics = Hemodynamics[0];
        re.ArtherialPressure[0] = 120;
        re.ArtherialPressure[1] = 80;
        re.Pulse = 75;
        re.PulseRhythm = PulseRhythm[0];
        re.HeartRate = 75;
        re.SpO2 = 97;
        re.Abdomen = Abdomen[0];
        re.Pain = Pain[0];
        re.Distension = Distension[1];
        re.Peristalsis = Peristalsis[2];
        re.Tongue[0] = Tongue[0][0]?.ToString();
        re.Tongue[1] = Tongue[1][0]?.ToString();
        re.Diuresis = 200.0;
        re.Urine = Urine[0];
        re.LaboratoryData = "в работе.";
        re.SeverityOfCondition = $"{conditionList[0]}, {conditionList[1]}, {conditionList[3]}";
        re.TreatmentPlan = $"{planList[1]}, {planList[2]}, {planList[4]}, {planList[5]}, {planList[7]}, {planList[11]}";
        IsIVL = false;
    }

    void HandleWithIVL() 
    {
        re.DeliveredFrom = DeliveredFrom[0];
        re.AVLDueTransportation = AVLDueTransportation[1];
        re.Complaints = Complaints[2];
        re.ComplaintText = "SOFA-0.";
        re.Condition = Condition[2];
        re.Conscience = Conscience[7];
        re.Ramsey = Ramsey[5];
        re.MuscleTone = MuscleTone[0];
        re.SkinCovers[0] = SkinCovers[0][0]?.ToString();
        re.SkinCovers[1] = SkinCovers[1][0]?.ToString();
        re.SkinCovers[2] = SkinCovers[2][0]?.ToString();
        re.Cyanosis = Cyanosis[0];
        re.Marbling = Marbling[0];
        re.PeripheralEdema = PeripheralEdema[0];
        re.SkinCovers[0] = SkinCovers[0][0]?.ToString();
        re.VeinsToBeCatheterized[0] = VeinsToBeCatheterized[0][0]?.ToString();
        re.InflammationInCatheter = InflammationInCatheter[0];
        re.SpontaneousBreathing = SpontaneousBreathing[1];
        re.BreathingThrough = BreathingThrough[1];
        re.BreathingDisorder = BreathingDisorder[1];
        re.Auscultatory = Auscultatory[0];
        re.BreathingRate[0] = BreathingRate[0][0]?.ToString();
        re.Wheezes[0] = Wheezes[0][0]?.ToString();
        #region AVL Block
        if (re.RespiratorySupport == null)
            re.RespiratorySupport = RespiratorySupport[1];

        if (re.Device == null)
            re.Device = Device[1];

        if (re.Mode == null)
            re.Mode = Mode[4];

        if (re.Till == 0)
            re.Till = 500;

        if (re.BR == 0)
            re.BR = 12;

        if (re.Pinsp == 0)
            re.Pinsp = 16;

        if (re.Psupp == 0)
            re.Psupp = 12;

        if (re.PEEP == 0)
            re.PEEP = 5;

        if (re.FiO2 == 0)
            re.FiO2 = 40;
        #endregion
        re.Hemodynamics = Hemodynamics[0];
        re.ArtherialPressure[0] = 120;
        re.ArtherialPressure[1] = 80;
        re.Pulse = 75;
        re.PulseRhythm = PulseRhythm[0];
        re.HeartRate = 75;
        re.SpO2 = 97;
        re.Abdomen = Abdomen[0];
        re.Pain = Pain[0];
        re.Distension = Distension[1];
        re.Peristalsis = Peristalsis[2];
        re.Tongue[0] = Tongue[0][0]?.ToString();
        re.Tongue[1] = Tongue[1][0]?.ToString();
        re.Diuresis = 200.0;
        re.Urine = Urine[0];
        re.LaboratoryData = "в работе.";
        re.SeverityOfCondition = $"{conditionList[0]}, {conditionList[1]}, {conditionList[3]}";
        re.TreatmentPlan = $"{planList[1]}, {planList[2]}, {planList[4]}, {planList[5]}, {planList[6]}, {planList[11]}";
        IsIVL = true;
    }

    #region Dialog functionality
    IEnumerable<string>? listCondition;
    IEnumerable<string>? listTreatmentPlan;
    private DialogOptions dialogOptionsCondition = new();
    private DialogOptions dialogOptionsPlan = new();
    private bool visibleCondition;
    private bool visiblePlan;
    private void OpenConditionDialog() => visibleCondition = true;
    private void OpenPlanDialog() => visiblePlan = true;
    void ConditionOk() => visibleCondition = false;
    void PlanOk() => visiblePlan = false;
    void ClearConditionList() 
    {
        re.SeverityOfCondition = "";
        listCondition = null;
        StateHasChanged();
    }
    void ClearTreatmentPlan()
    {
        re.TreatmentPlan = "";
        listTreatmentPlan = null;
        StateHasChanged();
    }
    #endregion

    async Task Submit(){
        await reService.SaveReceptEpicrisisAsync(re);
    }
}